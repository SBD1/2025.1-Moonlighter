services:
  postgres:
    image: postgres:15
    container_name: moonlighter-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: moonlighter
      POSTGRES_PASSWORD: moonlighter
      POSTGRES_DB: moonlighter
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./apps/sql:/docker-entrypoint-initdb.d
    networks:
      - moonlighter-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: moonlighter-pgadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: moonlighter@db.com
      PGADMIN_DEFAULT_PASSWORD: moonlighter
    networks:
      - moonlighter-net
    depends_on:
      - postgres

  cronjob:
    image: alpine
    container_name: moonlighter-cronjob
    restart: always
    depends_on:
      postgres:
        condition: service_started
    command: |
      sh -c "apk add --no-cache postgresql-client &&
             echo 'Cronjob iniciado. Executando a tarefa a cada 15 minutos...' &&
             while true; do
               psql -h postgres -U moonlighter -d moonlighter -c 'SELECT atualizar_periodo_mundo();'
               echo \"Próxima execução em 5 minutos... ($(date))\";
               sleep 300;
             done"
    environment:
      PGPASSWORD: moonlighter
    networks:
      - moonlighter-net

volumes:
  postgres_data:

networks:
  moonlighter-net:
    driver: bridge
